name: Check for deployment keyword

on:
  pull_request:
    types: [closed]

jobs:
  check-for-deploy:
    runs-on: ubuntu-latest
    env:
      DEPLOY_KEYWORD: "&deploy"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: get deployment environment
        if: github.event.pull_request.merged == true
        run: |
          function get_environment() {
            local environment=$(echo "$1" | grep -oP "(?<=${{ env.DEPLOY_KEYWORD }}:)[^ ]+")
            if [[ -z "$environment" ]]; then
              return 1
            else
              echo "$environment"
            fi
          }

          if [[ "${{ github.event.pull_request.title }}" == *"${{ env.DEPLOY_KEYWORD }}:"* ]]; then
            environment=$(get_environment "${{ github.event.pull_request.title }}")
          elif [[ "${{ github.event.pull_request.body }}" == *"${{ env.DEPLOY_KEYWORD }}:"* ]]; then
            environment=$(get_environment "${{ github.event.pull_request.body }}")
          else
            echo "PR was merged but does not contain ${{ env.DEPLOY_KEYWORD }}."
          fi

          if [ -n "$environment" ]; then
            echo "ENVIRONMENT=$environment" >> $GITHUB_ENV
            echo "Environment: $environment"
          else
            echo "Environment is not set"
          fi

      - name: set profile
        if: env.ENVIRONMENT
        run: echo "AWS_PROFILE=env.ENVIRONMENT" >> $GITHUB_ENV
      
      - name: check profile
        if: success()
        run: echo "aws s3 ls --profile=env.AWS_PROFILE"
      
      - name: init terraform
        if: success()
        run: echo "terraform init"

      - name: run terraform
        if: success()
        run: echo "terraform apply -auto-approve"
